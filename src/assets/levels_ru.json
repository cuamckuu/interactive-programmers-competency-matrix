{
    "data_structures": {
        "name": "Структуры данных",
        "level0": "Не понимает разницы между массивом и связным списком.",
        "level1": "Может объяснить и использовать на практике массивы, связные списки, словари и т.д.",
        "level2": "Понимает плюсы и минусы использования тех или иных базовых структур данных (размер памяти, время выполнения операций с данными, в чем разница между массивами и связными списками в этом плане). Может объяснить как реализовать хэш-таблицы и как обработать коллизии. Приоритетные очереди и способы их реализации, и т.д.",
        "level3": "Знание сложных структур данных, таких как B-дерево, Биномиальная куча и Фибоначчиевская куча, АВЛ-дерево, Красно-чёрное дерево, Косое дерево, Список с пропусками, TRIE-структуры и т.д."
    },
    "algorithms": {
        "name": "Алгоритмы",
        "level0": "Не может найти среднее значение массива чисел. (Тяжело поверить, но встречаются и такие кандидаты на собеседовании.)",
        "level1": "Базовые методы сортировки и поиска. Обход и поиск в структурах данных.",
        "level2": "Деревья, Графы, 'простой путь' и  'разделяй и властвуй'-алгоритмы. Понимает ассоциацию уровней этой матрицы.",
        "level3": "Может распознать и написать решение динамическим программированием, хорошо знает алгоритмы на графах, хорошо знает численные методы, может идентифицировать проблемы класса NP."
    },
    "systems_programming": {
        "name": "Системное программирование",
        "level0": "Не знает что такое компилятор, компоновщик или интерпретатор.",
        "level1": "Базовое понимание компиляторов, компоновщиков и интерпретаторов. Понимает, что такое ассемблерный код и как работают программы на уровне железа. Небольшое понимание виртуальной памяти и пэйджинга.",
        "level2": "Понимает чем отличается kernel mode от user mode, что такое мульти-трединг. Знает способы синхронизации и как реализованы примитивы синхронизации. Может читать ассемблерный код. Понимает, как работают сети, сетевые протоколы и может реализовать передачу данных через сокеты.",
        "level3": "Понимает как работает весь 'программный стэк': железо (CPU + Память + Кэш + Прерывания + микрокоды), двоичный код, ассемблер, статическая и динамическая линковка, компиляция, интерпретация, JIT-компиляция, сборка мусора, куча, стэк, адресация памяти."
    },
    "source_code_version_control": {
        "name": "Системы контроля версий",
        "level0": "Бэкап исходников в папку с датой бэкапа.",
        "level1": "VSS и основы CVS/SVN в качестве пользователя.",
        "level2": "Специалист по возможностям CVS и SVN. Знает как создать, разветвить, слить репозитарий и т.д.",
        "level3": "Знает распределенные системы VCS. Работает с Mercurial/Darcs/Git"
    },
    "build_automation": {
        "name": "Автоматизация сборки",
        "level0": "Знает как запустить Build из среды программирования.",
        "level1": "Умеет билдить из командной строки.",
        "level2": "Может настроить скрипт для сборки основной системы.",
        "level3": "Может настроить скрипт для сборки системы и документации, для сборки инсталляторов. Сделает и добавит код скрипта в систему контроля версий исходников."
    },
    "automated_testing": {
        "name": "Автоматизированное тестирование",
        "level0": "Считает, что тестирование - это работа тестеров.",
        "level1": "Может создавать свои хорошие авто- и юнит-тесты для кода, который пишет в настоящее время.",
        "level2": "Пишет код в стиле Test-driven Development (TDD).",
        "level3": "Может создавать автоматические тесты на функционал, пользовательский интерфейс и загрузку/производительность."
    },
    "problem_decomposition": {
        "name": "Декомпозиция задач",
        "level0": "Просто последовательные строчки. Copy/Paste - для повторного использования кода.",
        "level1": "Может разбивать решение задачи на несколько функций.",
        "level2": "Способен создавать многократно используемые функции/объекты, которые решают общие задачи.",
        "level3": "Использует соответствующие структуры данных и алгоритмы. Создает общий/объектно-ориентированный код, который инкапсулирует те условия задачи, которые могут быть изменены."
    },
    "systems_decomposition": {
        "name": "Декомпозиция систем",
        "level0": "Не способен думать о системе более сложной, чем один класс или файл.",
        "level1": "Может произвести декомпозицию задачи и спроектировать систему в пределах одной платформы или технологии.",
        "level2": "Может спроектировать систему, которая охватывает несколько технологий/платформ.",
        "level3": "Может визуализировать и проектировать сложные системы с несколькими линейками продуктов, учитывать интеграциею с внешними системами. Также должен уметь проектировать системы поддержки работы: мониторинг, генерация отчетов, аварийные переходы на использование запасных ресурсов."
    },
    "communication": {
        "name": "Общение",
        "level0": "Не может выразить свои мысли/идеи. Плохо с правописанием и грамматикой.",
        "level1": "Его понимают. Хорошие правописание и грамматика.",
        "level2": "Может эффективно общаться.",
        "level3": "Может понимать и объяснять мысли/дизайн/ идеи/специфику в точно выраженной  форме. В общении соответствует ситуации."
    },
    "code_organization_within_a_file": {
        "name": "Организация кода в файле",
        "level0": "Нет четкой организации кода в файле.",
        "level1": "Методы сгруппированны логически и по вызовам.",
        "level2": "Код разделен на регионы,  имеет хорошие комментарии, в т.ч. со ссылками на другие файлы исходников.",
        "level3": "Файл имеет разделы 'license header', 'summary', хорошие комментарии, непротиворечивую расстановку пробелов и табуляции. Файл должен выглядеть красиво."
    },
    "code_organization_across_files": {
        "name": "Организация кода между файлами",
        "level0": "Не приходит в голову мысль четко организовать код с помощью разделения на файлы.",
        "level1": "Похожие файлы группируются в папку.",
        "level2": "Каждый физический файл предназначен для чего-то одного, например, служит для объявления одного класса или для реализации одного функционала и т.д.",
        "level3": "Организация кода на физическом уровне точно соответствует проекту. Глядя на имена файлов и структуру папок, можно понять как спроектирована данная реализация."
    },
    "source_tree_organization": {
        "name": "Организация дерева исходников",
        "level0": "Все в одной папке.",
        "level1": "Простое разделение кода в логические подкаталоги.",
        "level2": "Нет циклических зависимостей. Бинарники, либы, документация, билды, сторонний код - все разложено в соответствующие папки.",
        "level3": "Структура дерева исходного кода соответствует логической иерархии и организации кода в проекте. Глядя на имена файлов и структуру папок, можно понять как спроектирована данная система."
    },
    "code_readability": {
        "name": "Читабельность кода",
        "level0": "Односложные имена.",
        "level1": "Хорошие имена файлов, переменных, классов, методов и т.д.",
        "level2": "Нет длинных функций, а нестандартный код, багфиксы и допущения в коде поясняются комментариями.",
        "level3": "Допущения в коде сопровождаются assert'ами. Поток операций в коде естественный - нет глубокой вложенности условий или методов."
    },
    "defensive_coding": {
        "name": "Защитное программирование",
        "level0": "Не понимает данной концепции.",
        "level1": "Проверяет все аргументы и ставит assert'ы на критические допущения в коде.",
        "level2": "Убеждается, что проверил возвращаемое значение и что обрабатывает исключения в потенциально бажном коде.",
        "level3": "Имеет свою собственную библиотеку помогающую в безопасном программировании, пишет юнит-тесты которые эмулируют сбои."
    },
    "error_handling": {
        "name": "Обработка ошибок",
        "level0": "Пишет код для 'идеального' случая, когда все работает и нет сбоев.",
        "level1": "Обработка ошибок в коде, который либо кидает исключение, либо генерирует ошибку.",
        "level2": "Убеждается, что после того, как произошла ошибка/исключение, программа продолжает работать, а ненужные более ресурсы, коннекшоны и память были корректно освобождены обработчиком ошибки.",
        "level3": "Пишет код так, чтобы определять возможные ошибки на раннем этапе,  придерживается последовательной стратегии обработки исключений во всех слоях кода, разрабатывает общие принципы обработки исключений во всей системе."
    },
    "ide": {
        "name": "IDE",
        "level0": "В основном использует IDE для редактирования текста.",
        "level1": "Способен эффективно пользоваться меню в IDE. Знает некоторые тонкости среды.",
        "level2": "Для самых используемых функций  среды знает горячие клавиши.",
        "level3": "Написал свои макросы."
    },
    "api": {
        "name": "API",
        "level0": "Часто нуждается в обращениях к документации.",
        "level1": "Помнит самые часто используемые API.",
        "level2": "Обширные и глубокие знания API.",
        "level3": "Написал библиотеки, которые оборачивают API, для упрощения задач, которые наиболее часто встречаются. Эти библиотеки также часто восполняют пробелы в API."
    },
    "frameworks": {
        "name": "Фреймворки",
        "level0": "Не использует никаких фреймверков за рамками основной платформы.",
        "level1": "Знает, но не использует популярные фреймворки, доступные для его платформы.",
        "level2": "Профессионально пользовался более чем одним фреймворком и хорошо разбирается в идиомах фреймворков. ",
        "level3": "Является автором фреймворка."
    },
    "requirements": {
        "name": "Требования",
        "level0": "Понимает выставленные требования и пишет код в соответствии со спецификацией.",
        "level1": "Задает вопросы касающиеся не рассмотренных в спецификации случаев.",
        "level2": "Понимает картину в целом и предлагает дополнительные аспекты, которые должны быть описаны в спецификации.",
        "level3": "Может предложить лучшие альтернативы и следовать выставленным требованиям, основываясь на собственном опыте."
    },
    "scripting": {
        "name": "Скрипты",
        "level0": "Отсутствует знание скриптовых инструментов.",
        "level1": "Batch-файлы/shell.",
        "level2": "Perl/Python/Ruby/VBScript/Powershell",
        "level3": "Писал и публиковал свои полезные скрипты."
    },
    "database": {
        "name": "Базы данных",
        "level0": "Думает, что Excel - это база данных.",
        "level1": "Знает основы баз данных, нормализацию, ACID, транзакции и может написать простые select'ы.",
        "level2": "Может спроектировать хорошие нормализованные схемы БД, с учетом запросов, которые будут выполняться; умело использует представления, хранимые процедуры, триггеры и собственные типы данных. Понимает разницу между кластеризованными и не-кластеризованными индексами. Специалист в использовании  ORM -тулзов.",
        "level3": "Может осуществлять администрирование БД, оптимизацию производительности БД, индексную оптимизацию, писать сложные select'ы, может заменить использование курсора  вызовами функций sql, понимает как данные хранятся внутри, как хранятся индексы, имеет представление о том, как зеркалятся и реплицируются БД и т.д. Понимает как работает двухфазный commit."
    },
    "tool_knowledge": {
        "name": "Знание инструментов",
        "level0": "Ограничены используемой IDE (VS.Net, Eclipse и т.д.)",
        "level1": "Знает о некоторых альтернативах популярным стандартным инструментариям.",
        "level2": "Хорошие знания редакторов кода, отладчиков, различных IDE, open-source альтернативах и т.д. (Например, это может быть кто-то, кто знает большинство тулзов из списка Скота Ганзельмана.) Использует ORM-тулзы.",
        "level3": "Написал свои инструментарии и скрипты, дополнительный плюс - если эти скрипты были опубликованы."
    },
    "languages_exposed_to": {
        "name": "Языки без профессионального опыта",
        "level0": "Императивные или объектно-ориентированные программирования",
        "level1": "Императивные, объектно-ориентированные и декларативные (SQL) языки программирования. Дополнительный бонус - если понимает разницу между статической и динамической, слабой и строгой типизацией, статически выводимыми типами.",
        "level2": "Функциональные языки программирования. Дополнительный бонус - если знает, что такое 'ленивые вычисления', каррирование, продолжения.",
        "level3": "Конкурентные (Erlang, Oz) и логические (Prolog)."
    },
    "codebase_knowledge": {
        "name": "Знание кодовой базы проекта",
        "level0": "Никогда не смотрел кодовую базу.",
        "level1": "Имеет общее представление о расположении кода и о том, как его собрать.",
        "level2": "Хорошие рабочие знания кодовой базы, реализовывал несколько багфиксов и, может быть, некоторые маленькие фичи.",
        "level3": "Реализовал несколько больших фич в кодовой базе, может легко описать изменения, требуемые для реализации большинства фич или багфисков."
    },
    "knowledge_of_upcoming_technologies": {
        "name": "Знание новейших технологий",
        "level0": "Не слышал о новейших технологиях.",
        "level1": "Слышал о новейших технологиях в своей области.",
        "level2": "Скачивал alpha/preview/CTP/beta-версии и читал некоторые статьи и руководства на эти темы.",
        "level3": "Пробовал сделать что-либо сам. Используя preview-версию сбилдил свою программу. Дополнительный плюс - если сделал свое решение доступным для других."
    },
    "platform_internals": {
        "name": "Знание внутренних аспектов платформы",
        "level0": "Нулевые знания внутренних аспектов платформы.",
        "level1": "В основном, знает как работает платформа внутри.",
        "level2": "Имеет глубокие познания внутренних аспектов платформы и может обрисовать, как платформа исполняет программный код.",
        "level3": "Написал свои тулзы для расширения возможностей платформы или для извлечения дополнительной информации о работе платформы. Например расширения дизассемблера, декомпилятора, отладчика и т.д."
    },
    "books": {
        "name": "Книги",
        "level0": "Серии книг '... за 21 день', '... за 24 часа', '... для чайников'.",
        "level1": "'Совершенный код', 'Не заставляйте меня думать!', 'Регулярные выражения'",
        "level2": "'Человеческий фактор: успешные проекты и команды', 'Приемы объектно-ориентиро-ванного проектирования.', 'Паттерны проектирования', 'Жемчужины проектирования','Руководство по разработке алгоритмов', 'Программист-прагматик', 'Мифический человеко - месяц'",
        "level3": "'Искусство программирования', 'Структура и интерпретация компьютерных программ', 'Concepts Techniques and  Models of Computer Programming', 'Database systems', 'Thinking Forth', 'Little Schemer'"
    },
    "blogs": {
        "name": "Блоги",
        "level0": "Слышал о блогах, но не уделял им внимания.",
        "level1": "Читает технические блоги, блоги о программировании и разработке ПО и регулярно слушает подкасты.",
        "level2": "Ведет ссылочный блог, содержащий коллекции  ссылок на полезные статьи и тулзы, которые [ссылки] он собирает.",
        "level3": "Ведет блог, в котором содержится его собственные понимание вопросов программирования."
    },
    "languages_with_professional_experience": {
        "name": "Языки из профессионального опыта",
        "level0": "Императивные или объектно-ориентированные программирования",
        "level1": "Императивные, объектно-ориентированные и декларативные (SQL) языки программирования. Дополнительный бонус - если понимает разницу между статической и динамической, слабой и строгой типизацией, статически выводимыми типами.",
        "level2": "Функциональные языки программирования. Дополнительный бонус - если знает, что такое 'ленивые вычисления', каррирование, продолжения.",
        "level3": "Конкурентные (Erlang, Oz) и логические (Prolog)."
    },
    "platforms_with_professional_experience": {
        "name": "Годы профессионального опыта конкретной платформы",
        "level0": "1",
        "level1": "2-3",
        "level2": "4-5",
        "level3": "6+"
    },
    "years_of_professional_experience": {
        "name": "Годы профессионального опыта",
        "level0": "1",
        "level1": "2-5",
        "level2": "6-9",
        "level3": "10+"
    },
    "domain_knowledge": {
        "name": "Знание предметной области",
        "level0": "Не знает о понятии 'предметная область'.",
        "level1": "Работал хотя бы над одним продуктом в своей предметной области.",
        "level2": "Работал над несколькими продуктами в одной и той же предметной области.",
        "level3": "Эксперт своей предметной области, проектировал и реализовывал несколько продуктов/решений в ней, хорошо разбирается в ее сущностях и протоколах."
    }
}
